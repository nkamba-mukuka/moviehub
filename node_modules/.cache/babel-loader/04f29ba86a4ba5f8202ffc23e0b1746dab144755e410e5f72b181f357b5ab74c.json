{"ast":null,"code":"var _jsxFileName = \"/Users/mukukahnkambagmail.com/Desktop/movie/interview-coding-challenge/clientside/zig-movie-app/src/MovieDetails.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        // Add your API call here to fetch movie details\n        // For now, using mock data\n        setMovie({\n          id: Number(id),\n          title: 'Sample Movie',\n          poster: 'url-to-poster',\n          description: 'Sample description'\n        });\n      } catch (err) {\n        setError('Failed to fetch movie details');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [id]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Movie not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      className: \"back-button\",\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetails, \"BtFmY6RiiQxz1sN/zmkPy8RzP4E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","MovieDetails","_s","id","navigate","movie","setMovie","isLoading","setIsLoading","error","setError","fetchMovieDetails","Number","title","poster","description","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/mukukahnkambagmail.com/Desktop/movie/interview-coding-challenge/clientside/zig-movie-app/src/MovieDetails.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\ninterface Movie {\n    id: number;\n    title: string;\n    poster: string;\n    description: string;\n}\n\nconst MovieDetails: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const navigate = useNavigate();\n    const [movie, setMovie] = useState<Movie | null>(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            try {\n                setIsLoading(true);\n                // Add your API call here to fetch movie details\n                // For now, using mock data\n                setMovie({\n                    id: Number(id),\n                    title: 'Sample Movie',\n                    poster: 'url-to-poster',\n                    description: 'Sample description'\n                });\n            } catch (err) {\n                setError('Failed to fetch movie details');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchMovieDetails();\n    }, [id]);\n\n    if (isLoading) return <div>Loading...</div>;\n    if (error) return <div className=\"error-message\">{error}</div>;\n    if (!movie) return <div>Movie not found</div>;\n\n    return (\n        <div className=\"movie-details\">\n            <button onClick={() => navigate(-1)} className=\"back-button\">\n                ‚Üê Back\n            </button>\n            <div className=\"movie-info\">\n                <img src={movie.poster} alt={movie.title} />\n                <div className=\"details\">\n                    <h2>{movie.title}</h2>\n                    <p>{movie.description}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}