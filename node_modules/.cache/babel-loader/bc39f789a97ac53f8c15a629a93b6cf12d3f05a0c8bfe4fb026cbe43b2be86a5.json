{"ast":null,"code":"var _jsxFileName = \"/Users/mukukahnkambagmail.com/Desktop/movie/interview-coding-challenge/clientside/zig-movie-app/src/components/MovieList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = _ref => {\n  _s();\n  let {\n    searchQuery\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    // Add your API call here to fetch movies\n    // This is just sample data\n    setMovies([{\n      id: 1,\n      title: 'An Easy Girl',\n      poster: 'url-to-poster-1'\n    }, {\n      id: 2,\n      title: 'The Note Book',\n      poster: 'url-to-poster-2'\n    }, {\n      id: 2,\n      title: 'He Just Not That Into You',\n      poster: 'url-to-poster-2'\n    }, {\n      id: 2,\n      title: 'Girls Trip',\n      poster: 'url-to-poster-2'\n    }, {\n      id: 2,\n      title: 'The Girl Next Door',\n      poster: 'url-to-poster-2'\n    }]);\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-grid\",\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/movie/${movie.id}`,\n      className: \"movie-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieList, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","MovieList","_ref","_s","searchQuery","movies","setMovies","id","title","poster","className","children","map","movie","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mukukahnkambagmail.com/Desktop/movie/interview-coding-challenge/clientside/zig-movie-app/src/components/MovieList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Movie {\n    id: number;\n    title: string;\n    poster: string;\n}\n\ninterface MovieListProps {\n    searchQuery?: string;\n}\n\nconst MovieList: React.FC<MovieListProps> = ({ searchQuery }) => {\n    const [movies, setMovies] = useState<Movie[]>([]);\n\n    useEffect(() => {\n        // Add your API call here to fetch movies\n        // This is just sample data\n        setMovies([\n            { id: 1, title: 'An Easy Girl', poster: 'url-to-poster-1' },\n            { id: 2, title: 'The Note Book', poster: 'url-to-poster-2' },\n            { id: 2, title: 'He Just Not That Into You', poster: 'url-to-poster-2' },\n            { id: 2, title: 'Girls Trip', poster: 'url-to-poster-2' },\n            { id: 2, title: 'The Girl Next Door', poster: 'url-to-poster-2' },\n        ]);\n    }, [searchQuery]);\n\n    return (\n        <div className=\"movie-grid\">\n            {movies.map(movie => (\n                <Link\n                    to={`/movie/${movie.id}`}\n                    key={movie.id}\n                    className=\"movie-card\"\n                >\n                    <img src={movie.poster} alt={movie.title} />\n                    <h3>{movie.title}</h3>\n                </Link>\n            ))}\n        </div>\n    );\n};\n\nexport default MovieList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYxC,MAAMC,SAAmC,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACxD,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZ;IACA;IACAU,SAAS,CAAC,CACN;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,cAAc;MAAEC,MAAM,EAAE;IAAkB,CAAC,EAC3D;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,eAAe;MAAEC,MAAM,EAAE;IAAkB,CAAC,EAC5D;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,2BAA2B;MAAEC,MAAM,EAAE;IAAkB,CAAC,EACxE;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAkB,CAAC,EACzD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,oBAAoB;MAAEC,MAAM,EAAE;IAAkB,CAAC,CACpE,CAAC;EACN,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAKU,SAAS,EAAC,YAAY;IAAAC,QAAA,EACtBN,MAAM,CAACO,GAAG,CAACC,KAAK,iBACbb,OAAA,CAACF,IAAI;MACDgB,EAAE,EAAE,UAAUD,KAAK,CAACN,EAAE,EAAG;MAEzBG,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAEtBX,OAAA;QAAKe,GAAG,EAAEF,KAAK,CAACJ,MAAO;QAACO,GAAG,EAAEH,KAAK,CAACL;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CpB,OAAA;QAAAW,QAAA,EAAKE,KAAK,CAACL;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAJjBP,KAAK,CAACN,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACjB,EAAA,CA7BIF,SAAmC;AAAAoB,EAAA,GAAnCpB,SAAmC;AA+BzC,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}