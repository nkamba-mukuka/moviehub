{"ast":null,"code":"var _jsxFileName = \"/Users/mukukahnkambagmail.com/Desktop/movie/interview-coding-challenge/clientside/zig-movie-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport MovieList from './components/MovieList';\nimport MovieDetails from './components/MovieDetails';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSearch = async query => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      setSearchQuery(query);\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=336ce50989c7da4ec846349adc27407a&query=${query}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n      const movies = data.results.map(movie => ({\n        id: movie.id,\n        title: movie.title,\n        poster: `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n      }));\n      setMovies(movies);\n    } catch (error) {\n      setError('Failed to fetch movies. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [\"//the hero section always available showing the top part\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" The MovieHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \"//error message\", error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), \"//the spinner loading , showing its processing\", isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this), \"//main content of the movies\", /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movie/:id\",\n            element: /*#__PURE__*/_jsxDEV(MovieDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jqWfJ5SGgwBpK7JPSBMcw3qYJ7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","SearchBar","MovieList","MovieDetails","LoadingSpinner","jsxDEV","_jsxDEV","App","_s","movies","setMovies","searchQuery","setSearchQuery","isLoading","setIsLoading","error","setError","handleSearch","query","url","response","fetch","ok","Error","data","json","results","map","movie","id","title","poster","poster_path","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","path","element","to","replace","_c","$RefreshReg$"],"sources":["/Users/mukukahnkambagmail.com/Desktop/movie/interview-coding-challenge/clientside/zig-movie-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\nimport MovieList from './components/MovieList';\nimport MovieDetails from './components/MovieDetails';\nimport LoadingSpinner from './components/LoadingSpinner';\n\nconst App: React.FC = () => {\n  const [movies, setMovies] = useState<[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSearch = async (query: string) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      setSearchQuery(query);\n\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=336ce50989c7da4ec846349adc27407a&query=${query}`;\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n\n      const data = await response.json();\n\n      const movies = data.results.map((movie: any) => ({\n        id: movie.id,\n        title: movie.title,\n        poster: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n      }));\n\n      setMovies(movies);\n\n    } catch (error) {\n      setError('Failed to fetch movies. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n\n        //the hero section always available showing the top part\n        <div className=\"hero-section\">\n          <h1> The MovieHub</h1>\n          <SearchBar onSearch={handleSearch} />\n        </div>\n\n        //error message\n        {error && <div className=\"error-message\">{error}</div>}\n\n        //the spinner loading , showing its processing\n        {isLoading && <LoadingSpinner />}\n\n\n         //main content of the movies\n        <main className=\"main-content\">\n          <Routes>\n            <Route path=\"/\" element={<MovieList />} />\n            <Route path=\"/movie/:id\" element={<MovieDetails />} />\n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}